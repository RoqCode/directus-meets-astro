---
import { Picture } from '@astrojs/image/components';

const response = await fetch(import.meta.env.GRAPHQL_URL, {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
  },
  body: JSON.stringify({
    query: `
        query {
          hero {
            id
            coreSettings {
              coreWidth
              coreMargin
              corePadding
            }
            headline
            subheadline
            body
            img {
              id
              title
              filename_disk
            }
          }
        }         
      `,
  }),
});

const json = await response.json();
const hero = json.data.hero;
---

<section
  class="hero"
  data-width={hero.coreSettings.coreWidth}
  data-margin={hero.coreSettings.coreMargin}
  data-padding={hero.coreSettings.corePadding}
>
  <div class="hero__content">
    <h1>{hero.headline}</h1>
    <h2>{hero.subheadline}</h2>
    <p>{hero.body}</p>
  </div>
  <div class="bg-image">
    <Picture
      src={`${import.meta.env.DIRECTUS_ASSETS}/${hero.img.filename_disk}`}
      alt={hero.img.title}
      sizes="(min-width: 1920px) 1920px, 100vw"
      widths={[320, 640, 1024, 1280, 1920]}
      aspectRatio="16:9"
    />
  </div>
</section>

<style lang="scss">
  @use '../styles/1-abstracts/variables' as *;
  @use '../styles/1-abstracts/mixins' as *;

  .hero {
    @include contentSpace('p t');

    h1 {
      color: white;

      //animate font-weight from 100 to 900
      font-weight: 100;
      animation: 3s ease-in-out 0s infinite normal forwards fadeInOutFont;
    }
  }

  @keyframes fadeInOutFont {
    0% {
      font-weight: 100;
    }
    50% {
      font-weight: 900;
    }
    100% {
      font-weight: 100;
    }
  }
</style>

/*
    Default usage
    Container:                  @include container();
    Row:                        @include container(row);
    Column:                     @include col(value);
    Push:                       @include push('direction', value);
*/

//  Mixin: Columns

@mixin col($value, $gridColumns: $gridColumns) {
  float: left;
  display: inline;

  @include media('small') {
    float: none;
    display: block;
  }

  @if $gridGutter == true and $gridGutterSizePx == true {
    $gridGutterSizeEm: rem($gridGutterSize);
    margin: rem($gridGutterSize * 0.5);
    width: calc(((100% / #{$gridColumns}) * #{$value}) - #{$gridGutterSizeEm});

    @include media('small') {
      width: calc(100% - #{$gridGutterSizeEm});
    }
  } @else if $gridGutter == true and $gridGutterSizePx == false {
    margin-left: $gridGutterSize * 0.5;
    margin-right: $gridGutterSize * 0.5;
    width: calc(((100% / #{$gridColumns}) * #{$value}) - #{$gridGutterSize});

    @include media('small') {
      width: calc(100% - #{$gridGutterSize});
    }
  } @else {
    width: calc((100% / #{$gridColumns}) * #{$value});

    @include media('small') {
      width: 100%;
    }
  }
}

//  Mixin: Container

@mixin container($option: false) {
  @if $option == false {
    @if $gridMaxWidthPx == true {
      margin-left: auto;
      margin-right: auto;

      @if $gridGutter == true and $gridGutterSizePx == true {
        max-width: rem($gridMaxWidth) + rem($gridGutterSize);
      } @else if $gridGutter == true and $gridGutterSizePx == false {
        max-width: calc(#{$gridMaxWidth} + #{$gridGutterSize});
      } @else {
        max-width: rem($gridMaxWidth);
      }
    } @else {
      @if ($gridMaxWidth == 100%) or ($gridMaxWidth == 100vw) {
        max-width: $gridMaxWidth;
      } @else {
        margin-left: auto;
        margin-right: auto;

        @if $gridGutter == true and $gridGutterSizePx == true {
          $gridGutterSizeEm: rem($gridGutterSize);
          max-width: calc(#{$gridMaxWidth} + #{$gridGutterSizeEm});
        } @else if $gridGutter == true and $gridGutterSizePx == false {
          max-width: calc(#{$gridMaxWidth} + #{$gridGutterSize});
        } @else {
          max-width: $gridMaxWidth;
        }
      }
    }
  } @else if $option == row {
    position: relative;
    width: 100%;

    & [class^='col'] {
      float: left;
    }

    &::after {
      content: '';
      display: table;
      clear: both;
    }
  }
}

//  Mixin: Push

@mixin push($direction, $value: 0) {
  @if $gridGutter == true and $gridGutterSizePx == true {
    $gridGutterSizeEm: rem($gridGutterSize);

    @if $direction == 'l' {
      margin-left: calc(((100% / #{$gridColumns}) * #{$value}) + (#{$gridGutterSizeEm} / 2));

      @include media('small') {
        margin-left: calc(#{$gridGutterSizeEm} / 2);
      }
    } @else if $direction == 'r' {
      margin-right: calc(((100% / #{$gridColumns}) * #{$value}) + (#{$gridGutterSizeEm} / 2));

      @include media('small') {
        margin-right: calc(#{$gridGutterSizeEm} / 2);
      }
    }
  } @else if $gridGutter == true and $gridGutterSizePx == false {
    @if $direction == 'l' {
      margin-left: calc(((100% / #{$gridColumns}) * #{$value}) + (#{$gridGutterSize} / 2));

      @include media('small') {
        margin-left: calc(#{$gridGutterSize} / 2);
      }
    } @else if $direction == 'r' {
      margin-right: calc(((100% / #{$gridColumns}) * #{$value}) + (#{$gridGutterSize} / 2));

      @include media('small') {
        margin-right: calc(#{$gridGutterSize} / 2);
      }
    }
  } @else {
    @if $direction == 'l' {
      margin-left: calc((100% / #{$gridColumns}) * #{$value});
    } @else if $direction == 'r' {
      margin-right: calc((100% / #{$gridColumns}) * #{$value});
    }
  }
}
